class Reaction < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Reaction, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def user_id: () -> Integer?

    def user_id=: (Integer?) -> Integer?

    def user_id?: () -> bool

    def user_id_changed?: () -> bool

    def user_id_change: () -> [ Integer?, Integer? ]

    def user_id_will_change!: () -> void

    def user_id_was: () -> Integer?

    def user_id_previously_changed?: () -> bool

    def user_id_previous_change: () -> Array[Integer?]?

    def user_id_previously_was: () -> Integer?

    def user_id_before_last_save: () -> Integer?

    def user_id_change_to_be_saved: () -> Array[Integer?]?

    def user_id_in_database: () -> Integer?

    def saved_change_to_user_id: () -> Array[Integer?]?

    def saved_change_to_user_id?: () -> bool

    def will_save_change_to_user_id?: () -> bool

    def restore_user_id!: () -> void

    def clear_user_id_change: () -> void

    def reaction_type_id: () -> Integer?

    def reaction_type_id=: (Integer?) -> Integer?

    def reaction_type_id?: () -> bool

    def reaction_type_id_changed?: () -> bool

    def reaction_type_id_change: () -> [ Integer?, Integer? ]

    def reaction_type_id_will_change!: () -> void

    def reaction_type_id_was: () -> Integer?

    def reaction_type_id_previously_changed?: () -> bool

    def reaction_type_id_previous_change: () -> Array[Integer?]?

    def reaction_type_id_previously_was: () -> Integer?

    def reaction_type_id_before_last_save: () -> Integer?

    def reaction_type_id_change_to_be_saved: () -> Array[Integer?]?

    def reaction_type_id_in_database: () -> Integer?

    def saved_change_to_reaction_type_id: () -> Array[Integer?]?

    def saved_change_to_reaction_type_id?: () -> bool

    def will_save_change_to_reaction_type_id?: () -> bool

    def restore_reaction_type_id!: () -> void

    def clear_reaction_type_id_change: () -> void

    def post_id: () -> Integer?

    def post_id=: (Integer?) -> Integer?

    def post_id?: () -> bool

    def post_id_changed?: () -> bool

    def post_id_change: () -> [ Integer?, Integer? ]

    def post_id_will_change!: () -> void

    def post_id_was: () -> Integer?

    def post_id_previously_changed?: () -> bool

    def post_id_previous_change: () -> Array[Integer?]?

    def post_id_previously_was: () -> Integer?

    def post_id_before_last_save: () -> Integer?

    def post_id_change_to_be_saved: () -> Array[Integer?]?

    def post_id_in_database: () -> Integer?

    def saved_change_to_post_id: () -> Array[Integer?]?

    def saved_change_to_post_id?: () -> bool

    def will_save_change_to_post_id?: () -> bool

    def restore_post_id!: () -> void

    def clear_post_id_change: () -> void

    def comment_id: () -> Integer?

    def comment_id=: (Integer?) -> Integer?

    def comment_id?: () -> bool

    def comment_id_changed?: () -> bool

    def comment_id_change: () -> [ Integer?, Integer? ]

    def comment_id_will_change!: () -> void

    def comment_id_was: () -> Integer?

    def comment_id_previously_changed?: () -> bool

    def comment_id_previous_change: () -> Array[Integer?]?

    def comment_id_previously_was: () -> Integer?

    def comment_id_before_last_save: () -> Integer?

    def comment_id_change_to_be_saved: () -> Array[Integer?]?

    def comment_id_in_database: () -> Integer?

    def saved_change_to_comment_id: () -> Array[Integer?]?

    def saved_change_to_comment_id?: () -> bool

    def will_save_change_to_comment_id?: () -> bool

    def restore_comment_id!: () -> void

    def clear_comment_id_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods

  def reaction_type: () -> ReactionType
  def reaction_type=: (ReactionType?) -> ReactionType?
  def reload_reaction_type: () -> ReactionType?
  def build_reaction_type: (untyped) -> ReactionType
  def create_reaction_type: (untyped) -> ReactionType
  def create_reaction_type!: (untyped) -> ReactionType
  def user: () -> User
  def user=: (User?) -> User?
  def reload_user: () -> User?
  def build_user: (untyped) -> User
  def create_user: (untyped) -> User
  def create_user!: (untyped) -> User
  def post: () -> Post
  def post=: (Post?) -> Post?
  def reload_post: () -> Post?
  def build_post: (untyped) -> Post
  def create_post: (untyped) -> Post
  def create_post!: (untyped) -> Post
  def comment: () -> Comment?
  def comment=: (Comment?) -> Comment?
  def reload_comment: () -> Comment?
  def build_comment: (untyped) -> Comment
  def create_comment: (untyped) -> Comment
  def create_comment!: (untyped) -> Comment
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Reaction, Integer]
    include Enumerable[Reaction]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Reaction, Integer]
  end
end

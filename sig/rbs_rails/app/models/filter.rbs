class Filter < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Filter, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def user_id: () -> Integer

    def user_id=: (Integer) -> Integer

    def user_id?: () -> bool

    def user_id_changed?: () -> bool

    def user_id_change: () -> [ Integer?, Integer? ]

    def user_id_will_change!: () -> void

    def user_id_was: () -> Integer?

    def user_id_previously_changed?: () -> bool

    def user_id_previous_change: () -> Array[Integer?]?

    def user_id_previously_was: () -> Integer?

    def user_id_before_last_save: () -> Integer?

    def user_id_change_to_be_saved: () -> Array[Integer?]?

    def user_id_in_database: () -> Integer?

    def saved_change_to_user_id: () -> Array[Integer?]?

    def saved_change_to_user_id?: () -> bool

    def will_save_change_to_user_id?: () -> bool

    def restore_user_id!: () -> void

    def clear_user_id_change: () -> void

    def name: () -> String

    def name=: (String) -> String

    def name?: () -> bool

    def name_changed?: () -> bool

    def name_change: () -> [ String?, String? ]

    def name_will_change!: () -> void

    def name_was: () -> String?

    def name_previously_changed?: () -> bool

    def name_previous_change: () -> Array[String?]?

    def name_previously_was: () -> String?

    def name_before_last_save: () -> String?

    def name_change_to_be_saved: () -> Array[String?]?

    def name_in_database: () -> String?

    def saved_change_to_name: () -> Array[String?]?

    def saved_change_to_name?: () -> bool

    def will_save_change_to_name?: () -> bool

    def restore_name!: () -> void

    def clear_name_change: () -> void

    def min_score: () -> Float?

    def min_score=: (Float?) -> Float?

    def min_score?: () -> bool

    def min_score_changed?: () -> bool

    def min_score_change: () -> [ Float?, Float? ]

    def min_score_will_change!: () -> void

    def min_score_was: () -> Float?

    def min_score_previously_changed?: () -> bool

    def min_score_previous_change: () -> Array[Float?]?

    def min_score_previously_was: () -> Float?

    def min_score_before_last_save: () -> Float?

    def min_score_change_to_be_saved: () -> Array[Float?]?

    def min_score_in_database: () -> Float?

    def saved_change_to_min_score: () -> Array[Float?]?

    def saved_change_to_min_score?: () -> bool

    def will_save_change_to_min_score?: () -> bool

    def restore_min_score!: () -> void

    def clear_min_score_change: () -> void

    def max_score: () -> Float?

    def max_score=: (Float?) -> Float?

    def max_score?: () -> bool

    def max_score_changed?: () -> bool

    def max_score_change: () -> [ Float?, Float? ]

    def max_score_will_change!: () -> void

    def max_score_was: () -> Float?

    def max_score_previously_changed?: () -> bool

    def max_score_previous_change: () -> Array[Float?]?

    def max_score_previously_was: () -> Float?

    def max_score_before_last_save: () -> Float?

    def max_score_change_to_be_saved: () -> Array[Float?]?

    def max_score_in_database: () -> Float?

    def saved_change_to_max_score: () -> Array[Float?]?

    def saved_change_to_max_score?: () -> bool

    def will_save_change_to_max_score?: () -> bool

    def restore_max_score!: () -> void

    def clear_max_score_change: () -> void

    def min_answers: () -> Integer?

    def min_answers=: (Integer?) -> Integer?

    def min_answers?: () -> bool

    def min_answers_changed?: () -> bool

    def min_answers_change: () -> [ Integer?, Integer? ]

    def min_answers_will_change!: () -> void

    def min_answers_was: () -> Integer?

    def min_answers_previously_changed?: () -> bool

    def min_answers_previous_change: () -> Array[Integer?]?

    def min_answers_previously_was: () -> Integer?

    def min_answers_before_last_save: () -> Integer?

    def min_answers_change_to_be_saved: () -> Array[Integer?]?

    def min_answers_in_database: () -> Integer?

    def saved_change_to_min_answers: () -> Array[Integer?]?

    def saved_change_to_min_answers?: () -> bool

    def will_save_change_to_min_answers?: () -> bool

    def restore_min_answers!: () -> void

    def clear_min_answers_change: () -> void

    def max_answers: () -> Integer?

    def max_answers=: (Integer?) -> Integer?

    def max_answers?: () -> bool

    def max_answers_changed?: () -> bool

    def max_answers_change: () -> [ Integer?, Integer? ]

    def max_answers_will_change!: () -> void

    def max_answers_was: () -> Integer?

    def max_answers_previously_changed?: () -> bool

    def max_answers_previous_change: () -> Array[Integer?]?

    def max_answers_previously_was: () -> Integer?

    def max_answers_before_last_save: () -> Integer?

    def max_answers_change_to_be_saved: () -> Array[Integer?]?

    def max_answers_in_database: () -> Integer?

    def saved_change_to_max_answers: () -> Array[Integer?]?

    def saved_change_to_max_answers?: () -> bool

    def will_save_change_to_max_answers?: () -> bool

    def restore_max_answers!: () -> void

    def clear_max_answers_change: () -> void

    def status: () -> String?

    def status=: (String?) -> String?

    def status?: () -> bool

    def status_changed?: () -> bool

    def status_change: () -> [ String?, String? ]

    def status_will_change!: () -> void

    def status_was: () -> String?

    def status_previously_changed?: () -> bool

    def status_previous_change: () -> Array[String?]?

    def status_previously_was: () -> String?

    def status_before_last_save: () -> String?

    def status_change_to_be_saved: () -> Array[String?]?

    def status_in_database: () -> String?

    def saved_change_to_status: () -> Array[String?]?

    def saved_change_to_status?: () -> bool

    def will_save_change_to_status?: () -> bool

    def restore_status!: () -> void

    def clear_status_change: () -> void

    def include_tags: () -> String?

    def include_tags=: (String?) -> String?

    def include_tags?: () -> bool

    def include_tags_changed?: () -> bool

    def include_tags_change: () -> [ String?, String? ]

    def include_tags_will_change!: () -> void

    def include_tags_was: () -> String?

    def include_tags_previously_changed?: () -> bool

    def include_tags_previous_change: () -> Array[String?]?

    def include_tags_previously_was: () -> String?

    def include_tags_before_last_save: () -> String?

    def include_tags_change_to_be_saved: () -> Array[String?]?

    def include_tags_in_database: () -> String?

    def saved_change_to_include_tags: () -> Array[String?]?

    def saved_change_to_include_tags?: () -> bool

    def will_save_change_to_include_tags?: () -> bool

    def restore_include_tags!: () -> void

    def clear_include_tags_change: () -> void

    def exclude_tags: () -> String?

    def exclude_tags=: (String?) -> String?

    def exclude_tags?: () -> bool

    def exclude_tags_changed?: () -> bool

    def exclude_tags_change: () -> [ String?, String? ]

    def exclude_tags_will_change!: () -> void

    def exclude_tags_was: () -> String?

    def exclude_tags_previously_changed?: () -> bool

    def exclude_tags_previous_change: () -> Array[String?]?

    def exclude_tags_previously_was: () -> String?

    def exclude_tags_before_last_save: () -> String?

    def exclude_tags_change_to_be_saved: () -> Array[String?]?

    def exclude_tags_in_database: () -> String?

    def saved_change_to_exclude_tags: () -> Array[String?]?

    def saved_change_to_exclude_tags?: () -> bool

    def will_save_change_to_exclude_tags?: () -> bool

    def restore_exclude_tags!: () -> void

    def clear_exclude_tags_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods
  def category_filter_defaults: () -> CategoryFilterDefault::ActiveRecord_Associations_CollectionProxy
  def category_filter_defaults=: (CategoryFilterDefault::ActiveRecord_Associations_CollectionProxy | Array[CategoryFilterDefault]) -> (CategoryFilterDefault::ActiveRecord_Associations_CollectionProxy | Array[CategoryFilterDefault])
  def category_filter_default_ids: () -> Array[Integer]
  def category_filter_default_ids=: (Array[Integer]) -> Array[Integer]

  def user: () -> User
  def user=: (User?) -> User?
  def reload_user: () -> User?
  def build_user: (untyped) -> User
  def create_user: (untyped) -> User
  def create_user!: (untyped) -> User
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Filter, Integer]
    include Enumerable[Filter]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Filter, Integer]
  end
end

class SuggestedEdit < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[SuggestedEdit, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def post_id: () -> Integer?

    def post_id=: (Integer?) -> Integer?

    def post_id?: () -> bool

    def post_id_changed?: () -> bool

    def post_id_change: () -> [ Integer?, Integer? ]

    def post_id_will_change!: () -> void

    def post_id_was: () -> Integer?

    def post_id_previously_changed?: () -> bool

    def post_id_previous_change: () -> Array[Integer?]?

    def post_id_previously_was: () -> Integer?

    def post_id_before_last_save: () -> Integer?

    def post_id_change_to_be_saved: () -> Array[Integer?]?

    def post_id_in_database: () -> Integer?

    def saved_change_to_post_id: () -> Array[Integer?]?

    def saved_change_to_post_id?: () -> bool

    def will_save_change_to_post_id?: () -> bool

    def restore_post_id!: () -> void

    def clear_post_id_change: () -> void

    def user_id: () -> Integer?

    def user_id=: (Integer?) -> Integer?

    def user_id?: () -> bool

    def user_id_changed?: () -> bool

    def user_id_change: () -> [ Integer?, Integer? ]

    def user_id_will_change!: () -> void

    def user_id_was: () -> Integer?

    def user_id_previously_changed?: () -> bool

    def user_id_previous_change: () -> Array[Integer?]?

    def user_id_previously_was: () -> Integer?

    def user_id_before_last_save: () -> Integer?

    def user_id_change_to_be_saved: () -> Array[Integer?]?

    def user_id_in_database: () -> Integer?

    def saved_change_to_user_id: () -> Array[Integer?]?

    def saved_change_to_user_id?: () -> bool

    def will_save_change_to_user_id?: () -> bool

    def restore_user_id!: () -> void

    def clear_user_id_change: () -> void

    def community_id: () -> Integer?

    def community_id=: (Integer?) -> Integer?

    def community_id?: () -> bool

    def community_id_changed?: () -> bool

    def community_id_change: () -> [ Integer?, Integer? ]

    def community_id_will_change!: () -> void

    def community_id_was: () -> Integer?

    def community_id_previously_changed?: () -> bool

    def community_id_previous_change: () -> Array[Integer?]?

    def community_id_previously_was: () -> Integer?

    def community_id_before_last_save: () -> Integer?

    def community_id_change_to_be_saved: () -> Array[Integer?]?

    def community_id_in_database: () -> Integer?

    def saved_change_to_community_id: () -> Array[Integer?]?

    def saved_change_to_community_id?: () -> bool

    def will_save_change_to_community_id?: () -> bool

    def restore_community_id!: () -> void

    def clear_community_id_change: () -> void

    def body: () -> String?

    def body=: (String?) -> String?

    def body?: () -> bool

    def body_changed?: () -> bool

    def body_change: () -> [ String?, String? ]

    def body_will_change!: () -> void

    def body_was: () -> String?

    def body_previously_changed?: () -> bool

    def body_previous_change: () -> Array[String?]?

    def body_previously_was: () -> String?

    def body_before_last_save: () -> String?

    def body_change_to_be_saved: () -> Array[String?]?

    def body_in_database: () -> String?

    def saved_change_to_body: () -> Array[String?]?

    def saved_change_to_body?: () -> bool

    def will_save_change_to_body?: () -> bool

    def restore_body!: () -> void

    def clear_body_change: () -> void

    def title: () -> String?

    def title=: (String?) -> String?

    def title?: () -> bool

    def title_changed?: () -> bool

    def title_change: () -> [ String?, String? ]

    def title_will_change!: () -> void

    def title_was: () -> String?

    def title_previously_changed?: () -> bool

    def title_previous_change: () -> Array[String?]?

    def title_previously_was: () -> String?

    def title_before_last_save: () -> String?

    def title_change_to_be_saved: () -> Array[String?]?

    def title_in_database: () -> String?

    def saved_change_to_title: () -> Array[String?]?

    def saved_change_to_title?: () -> bool

    def will_save_change_to_title?: () -> bool

    def restore_title!: () -> void

    def clear_title_change: () -> void

    def tags_cache: () -> String?

    def tags_cache=: (String?) -> String?

    def tags_cache?: () -> bool

    def tags_cache_changed?: () -> bool

    def tags_cache_change: () -> [ String?, String? ]

    def tags_cache_will_change!: () -> void

    def tags_cache_was: () -> String?

    def tags_cache_previously_changed?: () -> bool

    def tags_cache_previous_change: () -> Array[String?]?

    def tags_cache_previously_was: () -> String?

    def tags_cache_before_last_save: () -> String?

    def tags_cache_change_to_be_saved: () -> Array[String?]?

    def tags_cache_in_database: () -> String?

    def saved_change_to_tags_cache: () -> Array[String?]?

    def saved_change_to_tags_cache?: () -> bool

    def will_save_change_to_tags_cache?: () -> bool

    def restore_tags_cache!: () -> void

    def clear_tags_cache_change: () -> void

    def body_markdown: () -> String?

    def body_markdown=: (String?) -> String?

    def body_markdown?: () -> bool

    def body_markdown_changed?: () -> bool

    def body_markdown_change: () -> [ String?, String? ]

    def body_markdown_will_change!: () -> void

    def body_markdown_was: () -> String?

    def body_markdown_previously_changed?: () -> bool

    def body_markdown_previous_change: () -> Array[String?]?

    def body_markdown_previously_was: () -> String?

    def body_markdown_before_last_save: () -> String?

    def body_markdown_change_to_be_saved: () -> Array[String?]?

    def body_markdown_in_database: () -> String?

    def saved_change_to_body_markdown: () -> Array[String?]?

    def saved_change_to_body_markdown?: () -> bool

    def will_save_change_to_body_markdown?: () -> bool

    def restore_body_markdown!: () -> void

    def clear_body_markdown_change: () -> void

    def comment: () -> String?

    def comment=: (String?) -> String?

    def comment?: () -> bool

    def comment_changed?: () -> bool

    def comment_change: () -> [ String?, String? ]

    def comment_will_change!: () -> void

    def comment_was: () -> String?

    def comment_previously_changed?: () -> bool

    def comment_previous_change: () -> Array[String?]?

    def comment_previously_was: () -> String?

    def comment_before_last_save: () -> String?

    def comment_change_to_be_saved: () -> Array[String?]?

    def comment_in_database: () -> String?

    def saved_change_to_comment: () -> Array[String?]?

    def saved_change_to_comment?: () -> bool

    def will_save_change_to_comment?: () -> bool

    def restore_comment!: () -> void

    def clear_comment_change: () -> void

    def active: () -> bool?

    def active=: (bool?) -> bool?

    def active?: () -> bool

    def active_changed?: () -> bool

    def active_change: () -> [ bool?, bool? ]

    def active_will_change!: () -> void

    def active_was: () -> bool?

    def active_previously_changed?: () -> bool

    def active_previous_change: () -> Array[bool?]?

    def active_previously_was: () -> bool?

    def active_before_last_save: () -> bool?

    def active_change_to_be_saved: () -> Array[bool?]?

    def active_in_database: () -> bool?

    def saved_change_to_active: () -> Array[bool?]?

    def saved_change_to_active?: () -> bool

    def will_save_change_to_active?: () -> bool

    def restore_active!: () -> void

    def clear_active_change: () -> void

    def accepted: () -> bool?

    def accepted=: (bool?) -> bool?

    def accepted?: () -> bool

    def accepted_changed?: () -> bool

    def accepted_change: () -> [ bool?, bool? ]

    def accepted_will_change!: () -> void

    def accepted_was: () -> bool?

    def accepted_previously_changed?: () -> bool

    def accepted_previous_change: () -> Array[bool?]?

    def accepted_previously_was: () -> bool?

    def accepted_before_last_save: () -> bool?

    def accepted_change_to_be_saved: () -> Array[bool?]?

    def accepted_in_database: () -> bool?

    def saved_change_to_accepted: () -> Array[bool?]?

    def saved_change_to_accepted?: () -> bool

    def will_save_change_to_accepted?: () -> bool

    def restore_accepted!: () -> void

    def clear_accepted_change: () -> void

    def decided_at: () -> ActiveSupport::TimeWithZone?

    def decided_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

    def decided_at?: () -> bool

    def decided_at_changed?: () -> bool

    def decided_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def decided_at_will_change!: () -> void

    def decided_at_was: () -> ActiveSupport::TimeWithZone?

    def decided_at_previously_changed?: () -> bool

    def decided_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def decided_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def decided_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def decided_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def decided_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_decided_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_decided_at?: () -> bool

    def will_save_change_to_decided_at?: () -> bool

    def restore_decided_at!: () -> void

    def clear_decided_at_change: () -> void

    def decided_by_id: () -> Integer?

    def decided_by_id=: (Integer?) -> Integer?

    def decided_by_id?: () -> bool

    def decided_by_id_changed?: () -> bool

    def decided_by_id_change: () -> [ Integer?, Integer? ]

    def decided_by_id_will_change!: () -> void

    def decided_by_id_was: () -> Integer?

    def decided_by_id_previously_changed?: () -> bool

    def decided_by_id_previous_change: () -> Array[Integer?]?

    def decided_by_id_previously_was: () -> Integer?

    def decided_by_id_before_last_save: () -> Integer?

    def decided_by_id_change_to_be_saved: () -> Array[Integer?]?

    def decided_by_id_in_database: () -> Integer?

    def saved_change_to_decided_by_id: () -> Array[Integer?]?

    def saved_change_to_decided_by_id?: () -> bool

    def will_save_change_to_decided_by_id?: () -> bool

    def restore_decided_by_id!: () -> void

    def clear_decided_by_id_change: () -> void

    def rejected_comment: () -> String?

    def rejected_comment=: (String?) -> String?

    def rejected_comment?: () -> bool

    def rejected_comment_changed?: () -> bool

    def rejected_comment_change: () -> [ String?, String? ]

    def rejected_comment_will_change!: () -> void

    def rejected_comment_was: () -> String?

    def rejected_comment_previously_changed?: () -> bool

    def rejected_comment_previous_change: () -> Array[String?]?

    def rejected_comment_previously_was: () -> String?

    def rejected_comment_before_last_save: () -> String?

    def rejected_comment_change_to_be_saved: () -> Array[String?]?

    def rejected_comment_in_database: () -> String?

    def saved_change_to_rejected_comment: () -> Array[String?]?

    def saved_change_to_rejected_comment?: () -> bool

    def will_save_change_to_rejected_comment?: () -> bool

    def restore_rejected_comment!: () -> void

    def clear_rejected_comment_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void

    def before_title: () -> String?

    def before_title=: (String?) -> String?

    def before_title?: () -> bool

    def before_title_changed?: () -> bool

    def before_title_change: () -> [ String?, String? ]

    def before_title_will_change!: () -> void

    def before_title_was: () -> String?

    def before_title_previously_changed?: () -> bool

    def before_title_previous_change: () -> Array[String?]?

    def before_title_previously_was: () -> String?

    def before_title_before_last_save: () -> String?

    def before_title_change_to_be_saved: () -> Array[String?]?

    def before_title_in_database: () -> String?

    def saved_change_to_before_title: () -> Array[String?]?

    def saved_change_to_before_title?: () -> bool

    def will_save_change_to_before_title?: () -> bool

    def restore_before_title!: () -> void

    def clear_before_title_change: () -> void

    def before_body: () -> String?

    def before_body=: (String?) -> String?

    def before_body?: () -> bool

    def before_body_changed?: () -> bool

    def before_body_change: () -> [ String?, String? ]

    def before_body_will_change!: () -> void

    def before_body_was: () -> String?

    def before_body_previously_changed?: () -> bool

    def before_body_previous_change: () -> Array[String?]?

    def before_body_previously_was: () -> String?

    def before_body_before_last_save: () -> String?

    def before_body_change_to_be_saved: () -> Array[String?]?

    def before_body_in_database: () -> String?

    def saved_change_to_before_body: () -> Array[String?]?

    def saved_change_to_before_body?: () -> bool

    def will_save_change_to_before_body?: () -> bool

    def restore_before_body!: () -> void

    def clear_before_body_change: () -> void

    def before_body_markdown: () -> String?

    def before_body_markdown=: (String?) -> String?

    def before_body_markdown?: () -> bool

    def before_body_markdown_changed?: () -> bool

    def before_body_markdown_change: () -> [ String?, String? ]

    def before_body_markdown_will_change!: () -> void

    def before_body_markdown_was: () -> String?

    def before_body_markdown_previously_changed?: () -> bool

    def before_body_markdown_previous_change: () -> Array[String?]?

    def before_body_markdown_previously_was: () -> String?

    def before_body_markdown_before_last_save: () -> String?

    def before_body_markdown_change_to_be_saved: () -> Array[String?]?

    def before_body_markdown_in_database: () -> String?

    def saved_change_to_before_body_markdown: () -> Array[String?]?

    def saved_change_to_before_body_markdown?: () -> bool

    def will_save_change_to_before_body_markdown?: () -> bool

    def restore_before_body_markdown!: () -> void

    def clear_before_body_markdown_change: () -> void

    def before_tags_cache: () -> String?

    def before_tags_cache=: (String?) -> String?

    def before_tags_cache?: () -> bool

    def before_tags_cache_changed?: () -> bool

    def before_tags_cache_change: () -> [ String?, String? ]

    def before_tags_cache_will_change!: () -> void

    def before_tags_cache_was: () -> String?

    def before_tags_cache_previously_changed?: () -> bool

    def before_tags_cache_previous_change: () -> Array[String?]?

    def before_tags_cache_previously_was: () -> String?

    def before_tags_cache_before_last_save: () -> String?

    def before_tags_cache_change_to_be_saved: () -> Array[String?]?

    def before_tags_cache_in_database: () -> String?

    def saved_change_to_before_tags_cache: () -> Array[String?]?

    def saved_change_to_before_tags_cache?: () -> bool

    def will_save_change_to_before_tags_cache?: () -> bool

    def restore_before_tags_cache!: () -> void

    def clear_before_tags_cache_change: () -> void
  end
  include GeneratedAttributeMethods

  def post_type: () -> PostType?
  def post_type=: (PostType?) -> PostType?
  def build_post_type: (untyped) -> PostType
  def create_post_type: (untyped) -> PostType
  def create_post_type!: (untyped) -> PostType
  def reload_post_type: () -> PostType?
  def category: () -> Category?
  def category=: (Category?) -> Category?
  def build_category: (untyped) -> Category
  def create_category: (untyped) -> Category
  def create_category!: (untyped) -> Category
  def reload_category: () -> Category?
  def community: () -> Community
  def community=: (Community?) -> Community?
  def reload_community: () -> Community?
  def build_community: (untyped) -> Community
  def create_community: (untyped) -> Community
  def create_community!: (untyped) -> Community
  def post: () -> Post
  def post=: (Post?) -> Post?
  def reload_post: () -> Post?
  def build_post: (untyped) -> Post
  def create_post: (untyped) -> Post
  def create_post!: (untyped) -> Post
  def user: () -> User
  def user=: (User?) -> User?
  def reload_user: () -> User?
  def build_user: (untyped) -> User
  def create_user: (untyped) -> User
  def create_user!: (untyped) -> User
  def decided_by: () -> User?
  def decided_by=: (User?) -> User?
  def reload_decided_by: () -> User?
  def build_decided_by: (untyped) -> User
  def create_decided_by: (untyped) -> User
  def create_decided_by!: (untyped) -> User
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[SuggestedEdit, Integer]
    include Enumerable[SuggestedEdit]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[SuggestedEdit, Integer]
  end
end

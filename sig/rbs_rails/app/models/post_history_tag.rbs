class PostHistoryTag < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[PostHistoryTag, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def post_history_id: () -> Integer?

    def post_history_id=: (Integer?) -> Integer?

    def post_history_id?: () -> bool

    def post_history_id_changed?: () -> bool

    def post_history_id_change: () -> [ Integer?, Integer? ]

    def post_history_id_will_change!: () -> void

    def post_history_id_was: () -> Integer?

    def post_history_id_previously_changed?: () -> bool

    def post_history_id_previous_change: () -> Array[Integer?]?

    def post_history_id_previously_was: () -> Integer?

    def post_history_id_before_last_save: () -> Integer?

    def post_history_id_change_to_be_saved: () -> Array[Integer?]?

    def post_history_id_in_database: () -> Integer?

    def saved_change_to_post_history_id: () -> Array[Integer?]?

    def saved_change_to_post_history_id?: () -> bool

    def will_save_change_to_post_history_id?: () -> bool

    def restore_post_history_id!: () -> void

    def clear_post_history_id_change: () -> void

    def tag_id: () -> Integer?

    def tag_id=: (Integer?) -> Integer?

    def tag_id?: () -> bool

    def tag_id_changed?: () -> bool

    def tag_id_change: () -> [ Integer?, Integer? ]

    def tag_id_will_change!: () -> void

    def tag_id_was: () -> Integer?

    def tag_id_previously_changed?: () -> bool

    def tag_id_previous_change: () -> Array[Integer?]?

    def tag_id_previously_was: () -> Integer?

    def tag_id_before_last_save: () -> Integer?

    def tag_id_change_to_be_saved: () -> Array[Integer?]?

    def tag_id_in_database: () -> Integer?

    def saved_change_to_tag_id: () -> Array[Integer?]?

    def saved_change_to_tag_id?: () -> bool

    def will_save_change_to_tag_id?: () -> bool

    def restore_tag_id!: () -> void

    def clear_tag_id_change: () -> void

    def relationship: () -> String?

    def relationship=: (String?) -> String?

    def relationship?: () -> bool

    def relationship_changed?: () -> bool

    def relationship_change: () -> [ String?, String? ]

    def relationship_will_change!: () -> void

    def relationship_was: () -> String?

    def relationship_previously_changed?: () -> bool

    def relationship_previous_change: () -> Array[String?]?

    def relationship_previously_was: () -> String?

    def relationship_before_last_save: () -> String?

    def relationship_change_to_be_saved: () -> Array[String?]?

    def relationship_in_database: () -> String?

    def saved_change_to_relationship: () -> Array[String?]?

    def saved_change_to_relationship?: () -> bool

    def will_save_change_to_relationship?: () -> bool

    def restore_relationship!: () -> void

    def clear_relationship_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods

  def post_history: () -> PostHistory
  def post_history=: (PostHistory?) -> PostHistory?
  def reload_post_history: () -> PostHistory?
  def build_post_history: (untyped) -> PostHistory
  def create_post_history: (untyped) -> PostHistory
  def create_post_history!: (untyped) -> PostHistory
  def tag: () -> Tag
  def tag=: (Tag?) -> Tag?
  def reload_tag: () -> Tag?
  def build_tag: (untyped) -> Tag
  def create_tag: (untyped) -> Tag
  def create_tag!: (untyped) -> Tag
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[PostHistoryTag, Integer]
    include Enumerable[PostHistoryTag]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[PostHistoryTag, Integer]
  end
end

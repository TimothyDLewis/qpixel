module MicroAuth
  class App < ::ApplicationRecord
    extend _ActiveRecord_Relation_ClassMethods[MicroAuth::App, ActiveRecord_Relation, Integer]

    module GeneratedAttributeMethods
      def id: () -> Integer

      def id=: (Integer) -> Integer

      def id?: () -> bool

      def id_changed?: () -> bool

      def id_change: () -> [ Integer?, Integer? ]

      def id_will_change!: () -> void

      def id_was: () -> Integer?

      def id_previously_changed?: () -> bool

      def id_previous_change: () -> Array[Integer?]?

      def id_previously_was: () -> Integer?

      def id_before_last_save: () -> Integer?

      def id_change_to_be_saved: () -> Array[Integer?]?

      def id_in_database: () -> Integer?

      def saved_change_to_id: () -> Array[Integer?]?

      def saved_change_to_id?: () -> bool

      def will_save_change_to_id?: () -> bool

      def restore_id!: () -> void

      def clear_id_change: () -> void

      def name: () -> String?

      def name=: (String?) -> String?

      def name?: () -> bool

      def name_changed?: () -> bool

      def name_change: () -> [ String?, String? ]

      def name_will_change!: () -> void

      def name_was: () -> String?

      def name_previously_changed?: () -> bool

      def name_previous_change: () -> Array[String?]?

      def name_previously_was: () -> String?

      def name_before_last_save: () -> String?

      def name_change_to_be_saved: () -> Array[String?]?

      def name_in_database: () -> String?

      def saved_change_to_name: () -> Array[String?]?

      def saved_change_to_name?: () -> bool

      def will_save_change_to_name?: () -> bool

      def restore_name!: () -> void

      def clear_name_change: () -> void

      def app_id: () -> String?

      def app_id=: (String?) -> String?

      def app_id?: () -> bool

      def app_id_changed?: () -> bool

      def app_id_change: () -> [ String?, String? ]

      def app_id_will_change!: () -> void

      def app_id_was: () -> String?

      def app_id_previously_changed?: () -> bool

      def app_id_previous_change: () -> Array[String?]?

      def app_id_previously_was: () -> String?

      def app_id_before_last_save: () -> String?

      def app_id_change_to_be_saved: () -> Array[String?]?

      def app_id_in_database: () -> String?

      def saved_change_to_app_id: () -> Array[String?]?

      def saved_change_to_app_id?: () -> bool

      def will_save_change_to_app_id?: () -> bool

      def restore_app_id!: () -> void

      def clear_app_id_change: () -> void

      def public_key: () -> String?

      def public_key=: (String?) -> String?

      def public_key?: () -> bool

      def public_key_changed?: () -> bool

      def public_key_change: () -> [ String?, String? ]

      def public_key_will_change!: () -> void

      def public_key_was: () -> String?

      def public_key_previously_changed?: () -> bool

      def public_key_previous_change: () -> Array[String?]?

      def public_key_previously_was: () -> String?

      def public_key_before_last_save: () -> String?

      def public_key_change_to_be_saved: () -> Array[String?]?

      def public_key_in_database: () -> String?

      def saved_change_to_public_key: () -> Array[String?]?

      def saved_change_to_public_key?: () -> bool

      def will_save_change_to_public_key?: () -> bool

      def restore_public_key!: () -> void

      def clear_public_key_change: () -> void

      def secret_key: () -> String?

      def secret_key=: (String?) -> String?

      def secret_key?: () -> bool

      def secret_key_changed?: () -> bool

      def secret_key_change: () -> [ String?, String? ]

      def secret_key_will_change!: () -> void

      def secret_key_was: () -> String?

      def secret_key_previously_changed?: () -> bool

      def secret_key_previous_change: () -> Array[String?]?

      def secret_key_previously_was: () -> String?

      def secret_key_before_last_save: () -> String?

      def secret_key_change_to_be_saved: () -> Array[String?]?

      def secret_key_in_database: () -> String?

      def saved_change_to_secret_key: () -> Array[String?]?

      def saved_change_to_secret_key?: () -> bool

      def will_save_change_to_secret_key?: () -> bool

      def restore_secret_key!: () -> void

      def clear_secret_key_change: () -> void

      def description: () -> String?

      def description=: (String?) -> String?

      def description?: () -> bool

      def description_changed?: () -> bool

      def description_change: () -> [ String?, String? ]

      def description_will_change!: () -> void

      def description_was: () -> String?

      def description_previously_changed?: () -> bool

      def description_previous_change: () -> Array[String?]?

      def description_previously_was: () -> String?

      def description_before_last_save: () -> String?

      def description_change_to_be_saved: () -> Array[String?]?

      def description_in_database: () -> String?

      def saved_change_to_description: () -> Array[String?]?

      def saved_change_to_description?: () -> bool

      def will_save_change_to_description?: () -> bool

      def restore_description!: () -> void

      def clear_description_change: () -> void

      def auth_domain: () -> String?

      def auth_domain=: (String?) -> String?

      def auth_domain?: () -> bool

      def auth_domain_changed?: () -> bool

      def auth_domain_change: () -> [ String?, String? ]

      def auth_domain_will_change!: () -> void

      def auth_domain_was: () -> String?

      def auth_domain_previously_changed?: () -> bool

      def auth_domain_previous_change: () -> Array[String?]?

      def auth_domain_previously_was: () -> String?

      def auth_domain_before_last_save: () -> String?

      def auth_domain_change_to_be_saved: () -> Array[String?]?

      def auth_domain_in_database: () -> String?

      def saved_change_to_auth_domain: () -> Array[String?]?

      def saved_change_to_auth_domain?: () -> bool

      def will_save_change_to_auth_domain?: () -> bool

      def restore_auth_domain!: () -> void

      def clear_auth_domain_change: () -> void

      def user_id: () -> Integer?

      def user_id=: (Integer?) -> Integer?

      def user_id?: () -> bool

      def user_id_changed?: () -> bool

      def user_id_change: () -> [ Integer?, Integer? ]

      def user_id_will_change!: () -> void

      def user_id_was: () -> Integer?

      def user_id_previously_changed?: () -> bool

      def user_id_previous_change: () -> Array[Integer?]?

      def user_id_previously_was: () -> Integer?

      def user_id_before_last_save: () -> Integer?

      def user_id_change_to_be_saved: () -> Array[Integer?]?

      def user_id_in_database: () -> Integer?

      def saved_change_to_user_id: () -> Array[Integer?]?

      def saved_change_to_user_id?: () -> bool

      def will_save_change_to_user_id?: () -> bool

      def restore_user_id!: () -> void

      def clear_user_id_change: () -> void

      def active: () -> bool

      def active=: (bool) -> bool

      def active?: () -> bool

      def active_changed?: () -> bool

      def active_change: () -> [ bool?, bool? ]

      def active_will_change!: () -> void

      def active_was: () -> bool?

      def active_previously_changed?: () -> bool

      def active_previous_change: () -> Array[bool?]?

      def active_previously_was: () -> bool?

      def active_before_last_save: () -> bool?

      def active_change_to_be_saved: () -> Array[bool?]?

      def active_in_database: () -> bool?

      def saved_change_to_active: () -> Array[bool?]?

      def saved_change_to_active?: () -> bool

      def will_save_change_to_active?: () -> bool

      def restore_active!: () -> void

      def clear_active_change: () -> void

      def deactivated_by_id: () -> Integer?

      def deactivated_by_id=: (Integer?) -> Integer?

      def deactivated_by_id?: () -> bool

      def deactivated_by_id_changed?: () -> bool

      def deactivated_by_id_change: () -> [ Integer?, Integer? ]

      def deactivated_by_id_will_change!: () -> void

      def deactivated_by_id_was: () -> Integer?

      def deactivated_by_id_previously_changed?: () -> bool

      def deactivated_by_id_previous_change: () -> Array[Integer?]?

      def deactivated_by_id_previously_was: () -> Integer?

      def deactivated_by_id_before_last_save: () -> Integer?

      def deactivated_by_id_change_to_be_saved: () -> Array[Integer?]?

      def deactivated_by_id_in_database: () -> Integer?

      def saved_change_to_deactivated_by_id: () -> Array[Integer?]?

      def saved_change_to_deactivated_by_id?: () -> bool

      def will_save_change_to_deactivated_by_id?: () -> bool

      def restore_deactivated_by_id!: () -> void

      def clear_deactivated_by_id_change: () -> void

      def deactivated_at: () -> ActiveSupport::TimeWithZone?

      def deactivated_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

      def deactivated_at?: () -> bool

      def deactivated_at_changed?: () -> bool

      def deactivated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def deactivated_at_will_change!: () -> void

      def deactivated_at_was: () -> ActiveSupport::TimeWithZone?

      def deactivated_at_previously_changed?: () -> bool

      def deactivated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def deactivated_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def deactivated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def deactivated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def deactivated_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_deactivated_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_deactivated_at?: () -> bool

      def will_save_change_to_deactivated_at?: () -> bool

      def restore_deactivated_at!: () -> void

      def clear_deactivated_at_change: () -> void

      def deactivate_comment: () -> String?

      def deactivate_comment=: (String?) -> String?

      def deactivate_comment?: () -> bool

      def deactivate_comment_changed?: () -> bool

      def deactivate_comment_change: () -> [ String?, String? ]

      def deactivate_comment_will_change!: () -> void

      def deactivate_comment_was: () -> String?

      def deactivate_comment_previously_changed?: () -> bool

      def deactivate_comment_previous_change: () -> Array[String?]?

      def deactivate_comment_previously_was: () -> String?

      def deactivate_comment_before_last_save: () -> String?

      def deactivate_comment_change_to_be_saved: () -> Array[String?]?

      def deactivate_comment_in_database: () -> String?

      def saved_change_to_deactivate_comment: () -> Array[String?]?

      def saved_change_to_deactivate_comment?: () -> bool

      def will_save_change_to_deactivate_comment?: () -> bool

      def restore_deactivate_comment!: () -> void

      def clear_deactivate_comment_change: () -> void

      def created_at: () -> ActiveSupport::TimeWithZone

      def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

      def created_at?: () -> bool

      def created_at_changed?: () -> bool

      def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def created_at_will_change!: () -> void

      def created_at_was: () -> ActiveSupport::TimeWithZone?

      def created_at_previously_changed?: () -> bool

      def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def created_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_created_at?: () -> bool

      def will_save_change_to_created_at?: () -> bool

      def restore_created_at!: () -> void

      def clear_created_at_change: () -> void

      def updated_at: () -> ActiveSupport::TimeWithZone

      def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

      def updated_at?: () -> bool

      def updated_at_changed?: () -> bool

      def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def updated_at_will_change!: () -> void

      def updated_at_was: () -> ActiveSupport::TimeWithZone?

      def updated_at_previously_changed?: () -> bool

      def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_updated_at?: () -> bool

      def will_save_change_to_updated_at?: () -> bool

      def restore_updated_at!: () -> void

      def clear_updated_at_change: () -> void
    end
    include GeneratedAttributeMethods
    def tokens: () -> MicroAuth::Token::ActiveRecord_Associations_CollectionProxy
    def tokens=: (MicroAuth::Token::ActiveRecord_Associations_CollectionProxy | Array[MicroAuth::Token]) -> (MicroAuth::Token::ActiveRecord_Associations_CollectionProxy | Array[MicroAuth::Token])
    def token_ids: () -> Array[Integer]
    def token_ids=: (Array[Integer]) -> Array[Integer]
    def users: () -> User::ActiveRecord_Associations_CollectionProxy
    def users=: (User::ActiveRecord_Associations_CollectionProxy | Array[User]) -> (User::ActiveRecord_Associations_CollectionProxy | Array[User])
    def user_ids: () -> Array[Integer]
    def user_ids=: (Array[Integer]) -> Array[Integer]

    def user: () -> User
    def user=: (User?) -> User?
    def reload_user: () -> User?
    def build_user: (untyped) -> User
    def create_user: (untyped) -> User
    def create_user!: (untyped) -> User
    def deactivated_by: () -> User?
    def deactivated_by=: (User?) -> User?
    def reload_deactivated_by: () -> User?
    def build_deactivated_by: (untyped) -> User
    def create_deactivated_by: (untyped) -> User
    def create_deactivated_by!: (untyped) -> User
    module GeneratedAssociationMethods
    end
    include GeneratedAssociationMethods

    module GeneratedRelationMethods
    end

    class ActiveRecord_Relation < ::ActiveRecord::Relation
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[MicroAuth::App, Integer]
      include Enumerable[MicroAuth::App]
    end

    class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[MicroAuth::App, Integer]
    end
  end
end

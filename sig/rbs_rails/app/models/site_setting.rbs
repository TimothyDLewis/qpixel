class SiteSetting < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[SiteSetting, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def name: () -> String?

    def name=: (String?) -> String?

    def name?: () -> bool

    def name_changed?: () -> bool

    def name_change: () -> [ String?, String? ]

    def name_will_change!: () -> void

    def name_was: () -> String?

    def name_previously_changed?: () -> bool

    def name_previous_change: () -> Array[String?]?

    def name_previously_was: () -> String?

    def name_before_last_save: () -> String?

    def name_change_to_be_saved: () -> Array[String?]?

    def name_in_database: () -> String?

    def saved_change_to_name: () -> Array[String?]?

    def saved_change_to_name?: () -> bool

    def will_save_change_to_name?: () -> bool

    def restore_name!: () -> void

    def clear_name_change: () -> void

    def value: () -> String?

    def value=: (String?) -> String?

    def value?: () -> bool

    def value_changed?: () -> bool

    def value_change: () -> [ String?, String? ]

    def value_will_change!: () -> void

    def value_was: () -> String?

    def value_previously_changed?: () -> bool

    def value_previous_change: () -> Array[String?]?

    def value_previously_was: () -> String?

    def value_before_last_save: () -> String?

    def value_change_to_be_saved: () -> Array[String?]?

    def value_in_database: () -> String?

    def saved_change_to_value: () -> Array[String?]?

    def saved_change_to_value?: () -> bool

    def will_save_change_to_value?: () -> bool

    def restore_value!: () -> void

    def clear_value_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void

    def value_type: () -> String

    def value_type=: (String) -> String

    def value_type?: () -> bool

    def value_type_changed?: () -> bool

    def value_type_change: () -> [ String?, String? ]

    def value_type_will_change!: () -> void

    def value_type_was: () -> String?

    def value_type_previously_changed?: () -> bool

    def value_type_previous_change: () -> Array[String?]?

    def value_type_previously_was: () -> String?

    def value_type_before_last_save: () -> String?

    def value_type_change_to_be_saved: () -> Array[String?]?

    def value_type_in_database: () -> String?

    def saved_change_to_value_type: () -> Array[String?]?

    def saved_change_to_value_type?: () -> bool

    def will_save_change_to_value_type?: () -> bool

    def restore_value_type!: () -> void

    def clear_value_type_change: () -> void

    def description: () -> String?

    def description=: (String?) -> String?

    def description?: () -> bool

    def description_changed?: () -> bool

    def description_change: () -> [ String?, String? ]

    def description_will_change!: () -> void

    def description_was: () -> String?

    def description_previously_changed?: () -> bool

    def description_previous_change: () -> Array[String?]?

    def description_previously_was: () -> String?

    def description_before_last_save: () -> String?

    def description_change_to_be_saved: () -> Array[String?]?

    def description_in_database: () -> String?

    def saved_change_to_description: () -> Array[String?]?

    def saved_change_to_description?: () -> bool

    def will_save_change_to_description?: () -> bool

    def restore_description!: () -> void

    def clear_description_change: () -> void

    def category: () -> String?

    def category=: (String?) -> String?

    def category?: () -> bool

    def category_changed?: () -> bool

    def category_change: () -> [ String?, String? ]

    def category_will_change!: () -> void

    def category_was: () -> String?

    def category_previously_changed?: () -> bool

    def category_previous_change: () -> Array[String?]?

    def category_previously_was: () -> String?

    def category_before_last_save: () -> String?

    def category_change_to_be_saved: () -> Array[String?]?

    def category_in_database: () -> String?

    def saved_change_to_category: () -> Array[String?]?

    def saved_change_to_category?: () -> bool

    def will_save_change_to_category?: () -> bool

    def restore_category!: () -> void

    def clear_category_change: () -> void

    def community_id: () -> Integer?

    def community_id=: (Integer?) -> Integer?

    def community_id?: () -> bool

    def community_id_changed?: () -> bool

    def community_id_change: () -> [ Integer?, Integer? ]

    def community_id_will_change!: () -> void

    def community_id_was: () -> Integer?

    def community_id_previously_changed?: () -> bool

    def community_id_previous_change: () -> Array[Integer?]?

    def community_id_previously_was: () -> Integer?

    def community_id_before_last_save: () -> Integer?

    def community_id_change_to_be_saved: () -> Array[Integer?]?

    def community_id_in_database: () -> Integer?

    def saved_change_to_community_id: () -> Array[Integer?]?

    def saved_change_to_community_id?: () -> bool

    def will_save_change_to_community_id?: () -> bool

    def restore_community_id!: () -> void

    def clear_community_id_change: () -> void
  end
  include GeneratedAttributeMethods

  def community: () -> Community?
  def community=: (Community?) -> Community?
  def reload_community: () -> Community?
  def build_community: (untyped) -> Community
  def create_community: (untyped) -> Community
  def create_community!: (untyped) -> Community
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  def self.for_community_id: (untyped community_id) -> ActiveRecord_Relation
  def self.global: () -> ActiveRecord_Relation
  def self.priority_order: () -> ActiveRecord_Relation

  module GeneratedRelationMethods
    def for_community_id: (untyped community_id) -> ActiveRecord_Relation

    def global: () -> ActiveRecord_Relation

    def priority_order: () -> ActiveRecord_Relation
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[SiteSetting, Integer]
    include Enumerable[SiteSetting]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[SiteSetting, Integer]
  end
end
